import { DynamoDBClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBClient";
import { DescribeKinesisStreamingDestinationInput, DescribeKinesisStreamingDestinationOutput } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeKinesisStreamingDestinationCommandInput = DescribeKinesisStreamingDestinationInput;
export declare type DescribeKinesisStreamingDestinationCommandOutput = DescribeKinesisStreamingDestinationOutput & __MetadataBearer;
/**
 * <p>Returns information about the status of Kinesis streaming.</p>
 */
export declare class DescribeKinesisStreamingDestinationCommand extends $Command<DescribeKinesisStreamingDestinationCommandInput, DescribeKinesisStreamingDestinationCommandOutput, DynamoDBClientResolvedConfig> {
    readonly input: DescribeKinesisStreamingDestinationCommandInput;
    constructor(input: DescribeKinesisStreamingDestinationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeKinesisStreamingDestinationCommandInput, DescribeKinesisStreamingDestinationCommandOutput>;
    private serialize;
    private deserialize;
}
