import { DynamoDBClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBClient";
import { KinesisStreamingDestinationInput, KinesisStreamingDestinationOutput } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DisableKinesisStreamingDestinationCommandInput = KinesisStreamingDestinationInput;
export declare type DisableKinesisStreamingDestinationCommandOutput = KinesisStreamingDestinationOutput & __MetadataBearer;
/**
 * <p>Stops replication from the DynamoDB table to the Kinesis data stream. This is done
 *             without deleting either of the resources.</p>
 */
export declare class DisableKinesisStreamingDestinationCommand extends $Command<DisableKinesisStreamingDestinationCommandInput, DisableKinesisStreamingDestinationCommandOutput, DynamoDBClientResolvedConfig> {
    readonly input: DisableKinesisStreamingDestinationCommandInput;
    constructor(input: DisableKinesisStreamingDestinationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DisableKinesisStreamingDestinationCommandInput, DisableKinesisStreamingDestinationCommandOutput>;
    private serialize;
    private deserialize;
}
